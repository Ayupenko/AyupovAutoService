//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_client_a_import1_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Gender), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Client), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ClientService_client_a_import1", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Client), "ClientService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ClientService), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ClientService_service_a_import", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Service), "ClientService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ClientService), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_DocumentByService_ClientService", "ClientService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.ClientService), "DocumentByService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.DocumentByService), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ProductSale_ClientService", "ClientService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AyupovAutoService.ClientService), "ProductSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ProductSale), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_Product_Manufacturer", "Manufacturer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AyupovAutoService.Manufacturer), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Product), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ProductPhoto_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Product), "ProductPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ProductPhoto), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ProductSale_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Product), "ProductSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ProductSale), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "FK_ServicePhoto_service_a_import", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AyupovAutoService.Service), "ServicePhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.ServicePhoto), true)]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "AttachedProduct", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Product), "Product1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Product))]
[assembly: EdmRelationshipAttribute("Ayupov_ServiceModel", "TagOfClient", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Client), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AyupovAutoService.Tag))]

#endregion

namespace AyupovAutoService
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Ayupov_ServiceEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Ayupov_ServiceEntities, используя строку соединения из раздела "Ayupov_ServiceEntities" файла конфигурации приложения.
        /// </summary>
        public Ayupov_ServiceEntities() : base("name=Ayupov_ServiceEntities", "Ayupov_ServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Ayupov_ServiceEntities.
        /// </summary>
        public Ayupov_ServiceEntities(string connectionString) : base(connectionString, "Ayupov_ServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Ayupov_ServiceEntities.
        /// </summary>
        public Ayupov_ServiceEntities(EntityConnection connection) : base(connection, "Ayupov_ServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Client> Client
        {
            get
            {
                if ((_Client == null))
                {
                    _Client = base.CreateObjectSet<Client>("Client");
                }
                return _Client;
            }
        }
        private ObjectSet<Client> _Client;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ClientService> ClientService
        {
            get
            {
                if ((_ClientService == null))
                {
                    _ClientService = base.CreateObjectSet<ClientService>("ClientService");
                }
                return _ClientService;
            }
        }
        private ObjectSet<ClientService> _ClientService;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DocumentByService> DocumentByService
        {
            get
            {
                if ((_DocumentByService == null))
                {
                    _DocumentByService = base.CreateObjectSet<DocumentByService>("DocumentByService");
                }
                return _DocumentByService;
            }
        }
        private ObjectSet<DocumentByService> _DocumentByService;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Gender> Gender
        {
            get
            {
                if ((_Gender == null))
                {
                    _Gender = base.CreateObjectSet<Gender>("Gender");
                }
                return _Gender;
            }
        }
        private ObjectSet<Gender> _Gender;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturer
        {
            get
            {
                if ((_Manufacturer == null))
                {
                    _Manufacturer = base.CreateObjectSet<Manufacturer>("Manufacturer");
                }
                return _Manufacturer;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturer;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ProductPhoto> ProductPhoto
        {
            get
            {
                if ((_ProductPhoto == null))
                {
                    _ProductPhoto = base.CreateObjectSet<ProductPhoto>("ProductPhoto");
                }
                return _ProductPhoto;
            }
        }
        private ObjectSet<ProductPhoto> _ProductPhoto;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ProductSale> ProductSale
        {
            get
            {
                if ((_ProductSale == null))
                {
                    _ProductSale = base.CreateObjectSet<ProductSale>("ProductSale");
                }
                return _ProductSale;
            }
        }
        private ObjectSet<ProductSale> _ProductSale;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Service> Service
        {
            get
            {
                if ((_Service == null))
                {
                    _Service = base.CreateObjectSet<Service>("Service");
                }
                return _Service;
            }
        }
        private ObjectSet<Service> _Service;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ServicePhoto> ServicePhoto
        {
            get
            {
                if ((_ServicePhoto == null))
                {
                    _ServicePhoto = base.CreateObjectSet<ServicePhoto>("ServicePhoto");
                }
                return _ServicePhoto;
            }
        }
        private ObjectSet<ServicePhoto> _ServicePhoto;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Client. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToClient(Client client)
        {
            base.AddObject("Client", client);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ClientService. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToClientService(ClientService clientService)
        {
            base.AddObject("ClientService", clientService);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DocumentByService. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDocumentByService(DocumentByService documentByService)
        {
            base.AddObject("DocumentByService", documentByService);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Gender. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGender(Gender gender)
        {
            base.AddObject("Gender", gender);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Manufacturer. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToManufacturer(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturer", manufacturer);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Product. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ProductPhoto. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProductPhoto(ProductPhoto productPhoto)
        {
            base.AddObject("ProductPhoto", productPhoto);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ProductSale. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProductSale(ProductSale productSale)
        {
            base.AddObject("ProductSale", productSale);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Service. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToService(Service service)
        {
            base.AddObject("Service", service);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ServicePhoto. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToServicePhoto(ServicePhoto servicePhoto)
        {
            base.AddObject("ServicePhoto", servicePhoto);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tag. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Client.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="lasName">Исходное значение свойства LasName.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="genderCode">Исходное значение свойства GenderCode.</param>
        /// <param name="phone">Исходное значение свойства Phone.</param>
        /// <param name="registationDate">Исходное значение свойства RegistationDate.</param>
        public static Client CreateClient(global::System.Int32 id, global::System.String lasName, global::System.String firstName, global::System.String genderCode, global::System.String phone, global::System.DateTime registationDate)
        {
            Client client = new Client();
            client.ID = id;
            client.LasName = lasName;
            client.FirstName = firstName;
            client.GenderCode = genderCode;
            client.Phone = phone;
            client.RegistationDate = registationDate;
            return client;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LasName
        {
            get
            {
                return _LasName;
            }
            set
            {
                OnLasNameChanging(value);
                ReportPropertyChanging("LasName");
                _LasName = StructuralObject.SetValidValue(value, false, "LasName");
                ReportPropertyChanged("LasName");
                OnLasNameChanged();
            }
        }
        private global::System.String _LasName;
        partial void OnLasNameChanging(global::System.String value);
        partial void OnLasNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, true, "Patronymic");
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderCode
        {
            get
            {
                return _GenderCode;
            }
            set
            {
                OnGenderCodeChanging(value);
                ReportPropertyChanging("GenderCode");
                _GenderCode = StructuralObject.SetValidValue(value, false, "GenderCode");
                ReportPropertyChanged("GenderCode");
                OnGenderCodeChanged();
            }
        }
        private global::System.String _GenderCode;
        partial void OnGenderCodeChanging(global::System.String value);
        partial void OnGenderCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistationDate
        {
            get
            {
                return _RegistationDate;
            }
            set
            {
                OnRegistationDateChanging(value);
                ReportPropertyChanging("RegistationDate");
                _RegistationDate = StructuralObject.SetValidValue(value, "RegistationDate");
                ReportPropertyChanged("RegistationDate");
                OnRegistationDateChanged();
            }
        }
        private global::System.DateTime _RegistationDate;
        partial void OnRegistationDateChanging(global::System.DateTime value);
        partial void OnRegistationDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_client_a_import1_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ClientService_client_a_import1", "ClientService")]
        public EntityCollection<ClientService> ClientService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientService>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "ClientService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientService>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "ClientService", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "TagOfClient", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("Ayupov_ServiceModel.TagOfClient", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("Ayupov_ServiceModel.TagOfClient", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="ClientService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientService : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ClientService.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="clientID">Исходное значение свойства ClientID.</param>
        /// <param name="serviceID">Исходное значение свойства ServiceID.</param>
        /// <param name="startTime">Исходное значение свойства StartTime.</param>
        public static ClientService CreateClientService(global::System.Int32 id, global::System.Int32 clientID, global::System.Int32 serviceID, global::System.DateTime startTime)
        {
            ClientService clientService = new ClientService();
            clientService.ID = id;
            clientService.ClientID = clientID;
            clientService.ServiceID = serviceID;
            clientService.StartTime = startTime;
            return clientService;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value, "ServiceID");
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private global::System.Int32 _ServiceID;
        partial void OnServiceIDChanging(global::System.Int32 value);
        partial void OnServiceIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ClientService_client_a_import1", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "Client").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Ayupov_ServiceModel.FK_ClientService_client_a_import1", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ClientService_service_a_import", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "Service").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_DocumentByService_ClientService", "DocumentByService")]
        public EntityCollection<DocumentByService> DocumentByService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentByService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "DocumentByService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentByService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "DocumentByService", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductSale_ClientService", "ProductSale")]
        public EntityCollection<ProductSale> ProductSale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSale>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ProductSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSale>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ProductSale", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="DocumentByService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentByService : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DocumentByService.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="clientServiceID">Исходное значение свойства ClientServiceID.</param>
        /// <param name="documentPath">Исходное значение свойства DocumentPath.</param>
        public static DocumentByService CreateDocumentByService(global::System.Int32 id, global::System.Int32 clientServiceID, global::System.String documentPath)
        {
            DocumentByService documentByService = new DocumentByService();
            documentByService.ID = id;
            documentByService.ClientServiceID = clientServiceID;
            documentByService.DocumentPath = documentPath;
            return documentByService;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientServiceID
        {
            get
            {
                return _ClientServiceID;
            }
            set
            {
                OnClientServiceIDChanging(value);
                ReportPropertyChanging("ClientServiceID");
                _ClientServiceID = StructuralObject.SetValidValue(value, "ClientServiceID");
                ReportPropertyChanged("ClientServiceID");
                OnClientServiceIDChanged();
            }
        }
        private global::System.Int32 _ClientServiceID;
        partial void OnClientServiceIDChanging(global::System.Int32 value);
        partial void OnClientServiceIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPath
        {
            get
            {
                return _DocumentPath;
            }
            set
            {
                OnDocumentPathChanging(value);
                ReportPropertyChanging("DocumentPath");
                _DocumentPath = StructuralObject.SetValidValue(value, false, "DocumentPath");
                ReportPropertyChanged("DocumentPath");
                OnDocumentPathChanged();
            }
        }
        private global::System.String _DocumentPath;
        partial void OnDocumentPathChanging(global::System.String value);
        partial void OnDocumentPathChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_DocumentByService_ClientService", "ClientService")]
        public ClientService ClientService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "ClientService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "ClientService").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientService> ClientServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "ClientService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientService>("Ayupov_ServiceModel.FK_DocumentByService_ClientService", "ClientService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Gender.
        /// </summary>
        /// <param name="code">Исходное значение свойства Code.</param>
        public static Gender CreateGender(global::System.String code)
        {
            Gender gender = new Gender();
            gender.Code = code;
            return gender;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false, "Code");
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_client_a_import1_Gender", "Client")]
        public EntityCollection<Client> Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("Ayupov_ServiceModel.FK_client_a_import1_Gender", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Manufacturer.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 id, global::System.String name)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.ID = id;
            manufacturer.Name = name;
            return manufacturer;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_Product_Manufacturer", "Product")]
        public EntityCollection<Product> Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Product.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="cost">Исходное значение свойства Cost.</param>
        /// <param name="isActive">Исходное значение свойства IsActive.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String title, global::System.Decimal cost, global::System.Boolean isActive)
        {
            Product product = new Product();
            product.ID = id;
            product.Title = title;
            product.Cost = cost;
            product.IsActive = isActive;
            return product;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MainImagePath
        {
            get
            {
                return _MainImagePath;
            }
            set
            {
                OnMainImagePathChanging(value);
                ReportPropertyChanging("MainImagePath");
                _MainImagePath = StructuralObject.SetValidValue(value, true, "MainImagePath");
                ReportPropertyChanged("MainImagePath");
                OnMainImagePathChanged();
            }
        }
        private global::System.String _MainImagePath;
        partial void OnMainImagePathChanging(global::System.String value);
        partial void OnMainImagePathChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value, "ManufacturerID");
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIDChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_Product_Manufacturer", "Manufacturer")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Manufacturer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Manufacturer").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Manufacturer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("Ayupov_ServiceModel.FK_Product_Manufacturer", "Manufacturer", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductPhoto_Product", "ProductPhoto")]
        public EntityCollection<ProductPhoto> ProductPhoto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductPhoto>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "ProductPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductPhoto>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "ProductPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductSale_Product", "ProductSale")]
        public EntityCollection<ProductSale> ProductSale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSale>("Ayupov_ServiceModel.FK_ProductSale_Product", "ProductSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSale>("Ayupov_ServiceModel.FK_ProductSale_Product", "ProductSale", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "AttachedProduct", "Product1")]
        public EntityCollection<Product> Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("Ayupov_ServiceModel.AttachedProduct", "Product1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("Ayupov_ServiceModel.AttachedProduct", "Product1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "AttachedProduct", "Product")]
        public EntityCollection<Product> Product2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("Ayupov_ServiceModel.AttachedProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("Ayupov_ServiceModel.AttachedProduct", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="ProductPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductPhoto : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ProductPhoto.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="productID">Исходное значение свойства ProductID.</param>
        /// <param name="photoPath">Исходное значение свойства PhotoPath.</param>
        public static ProductPhoto CreateProductPhoto(global::System.Int32 id, global::System.Int32 productID, global::System.String photoPath)
        {
            ProductPhoto productPhoto = new ProductPhoto();
            productPhoto.ID = id;
            productPhoto.ProductID = productID;
            productPhoto.PhotoPath = photoPath;
            return productPhoto;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, false, "PhotoPath");
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductPhoto_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductPhoto_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="ProductSale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSale : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ProductSale.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="saleDate">Исходное значение свойства SaleDate.</param>
        /// <param name="productID">Исходное значение свойства ProductID.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        public static ProductSale CreateProductSale(global::System.Int32 id, global::System.DateTime saleDate, global::System.Int32 productID, global::System.Int32 quantity)
        {
            ProductSale productSale = new ProductSale();
            productSale.ID = id;
            productSale.SaleDate = saleDate;
            productSale.ProductID = productID;
            productSale.Quantity = quantity;
            return productSale;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value, "SaleDate");
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientServiceID
        {
            get
            {
                return _ClientServiceID;
            }
            set
            {
                OnClientServiceIDChanging(value);
                ReportPropertyChanging("ClientServiceID");
                _ClientServiceID = StructuralObject.SetValidValue(value, "ClientServiceID");
                ReportPropertyChanged("ClientServiceID");
                OnClientServiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientServiceID;
        partial void OnClientServiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientServiceIDChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductSale_ClientService", "ClientService")]
        public ClientService ClientService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ClientService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ClientService").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientService> ClientServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientService>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ClientService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientService>("Ayupov_ServiceModel.FK_ProductSale_ClientService", "ClientService", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ProductSale_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductSale_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductSale_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductSale_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Ayupov_ServiceModel.FK_ProductSale_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Service.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="durationInSeconds">Исходное значение свойства DurationInSeconds.</param>
        /// <param name="cost">Исходное значение свойства Cost.</param>
        public static Service CreateService(global::System.Int32 id, global::System.String title, global::System.String durationInSeconds, global::System.Decimal cost)
        {
            Service service = new Service();
            service.ID = id;
            service.Title = title;
            service.DurationInSeconds = durationInSeconds;
            service.Cost = cost;
            return service;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MainImagePath
        {
            get
            {
                return _MainImagePath;
            }
            set
            {
                OnMainImagePathChanging(value);
                ReportPropertyChanging("MainImagePath");
                _MainImagePath = StructuralObject.SetValidValue(value, true, "MainImagePath");
                ReportPropertyChanged("MainImagePath");
                OnMainImagePathChanged();
            }
        }
        private global::System.String _MainImagePath;
        partial void OnMainImagePathChanging(global::System.String value);
        partial void OnMainImagePathChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DurationInSeconds
        {
            get
            {
                return _DurationInSeconds;
            }
            set
            {
                OnDurationInSecondsChanging(value);
                ReportPropertyChanging("DurationInSeconds");
                _DurationInSeconds = StructuralObject.SetValidValue(value, false, "DurationInSeconds");
                ReportPropertyChanged("DurationInSeconds");
                OnDurationInSecondsChanged();
            }
        }
        private global::System.String _DurationInSeconds;
        partial void OnDurationInSecondsChanging(global::System.String value);
        partial void OnDurationInSecondsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Double> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ClientService_service_a_import", "ClientService")]
        public EntityCollection<ClientService> ClientService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientService>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "ClientService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientService>("Ayupov_ServiceModel.FK_ClientService_service_a_import", "ClientService", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ServicePhoto_service_a_import", "ServicePhoto")]
        public EntityCollection<ServicePhoto> ServicePhoto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServicePhoto>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "ServicePhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServicePhoto>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "ServicePhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="ServicePhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServicePhoto : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ServicePhoto.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="serviceID">Исходное значение свойства ServiceID.</param>
        /// <param name="photoPath">Исходное значение свойства PhotoPath.</param>
        public static ServicePhoto CreateServicePhoto(global::System.Int32 id, global::System.Int32 serviceID, global::System.String photoPath)
        {
            ServicePhoto servicePhoto = new ServicePhoto();
            servicePhoto.ID = id;
            servicePhoto.ServiceID = serviceID;
            servicePhoto.PhotoPath = photoPath;
            return servicePhoto;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value, "ServiceID");
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private global::System.Int32 _ServiceID;
        partial void OnServiceIDChanging(global::System.Int32 value);
        partial void OnServiceIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, false, "PhotoPath");
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "FK_ServicePhoto_service_a_import", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "Service").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("Ayupov_ServiceModel.FK_ServicePhoto_service_a_import", "Service", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ayupov_ServiceModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tag.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="color">Исходное значение свойства Color.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String title, global::System.String color)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.Title = title;
            tag.Color = color;
            return tag;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ayupov_ServiceModel", "TagOfClient", "Client")]
        public EntityCollection<Client> Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("Ayupov_ServiceModel.TagOfClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("Ayupov_ServiceModel.TagOfClient", "Client", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
